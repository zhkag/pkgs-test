name: RT-Thread_Packages_Test

on:
  workflow_call

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    name: ${{ github.repository }}
    runs-on: ubuntu-latest
    steps:
      - name: Install Tools
        shell: bash 
        run: |
          sudo apt install python3 python3-pip gcc git libncurses5-dev -y
          python3 -m pip install scons==4.4.0 requests tqdm wget html-table
          url=https://raw.githubusercontent.com/RT-Thread/env/master/touch_env.sh
          wget $url -O touch_env.sh
          chmod 777 touch_env.sh
          ./touch_env.sh
          ~/.env/tools/scripts/pkgs --upgrade-modules
      - name: Install Test Resources
        shell: bash 
        run: |
          cd ${{ github.workspace }} && git clone https://github.com/RT-Thread/pkgs-test.git
          cd pkgs-test && python -c '__import__("'pkgs-test'").Config().get_resources();'
      - name: Packages Test
        shell: bash 
        run: |
          cd ${{ github.workspace }}/pkgs-test
          python -c 'import os; pkgs_test = __import__("'pkgs-test'"); config = pkgs_test.Config();\
          config.get_resources();\
          packages_index = pkgs_test.PackagesIndex(os.path.join(os.environ["'HOME'"], "'.env/packages/packages'"));\
          pkgs_config_dict = packages_index.repository_seek("'${{ github.repository }}'");\
          logs = pkgs_test.Logs("'artifacts_export'", config.get_config_data(), pkgs_config_dict);\
          build = pkgs_test.Build(config, pkgs_config_dict, logs); build.all();'
      - uses: actions/upload-artifact@v3
        with:
          name: artifacts_export
          path: ${{ github.workspace }}/pkgs-test/artifacts_export
          
  check-errors:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Download artifacts_export
        uses: actions/download-artifact@v3
        with:
          name: artifacts_export
      - name: Packages test error
        shell: bash 
        run: |
          if [ -f "index.html" ]; then str1=`cat index.html`; else str1=""; fi
          echo $str1
          str2="#f00"
          if [[ $str1 == *$str2* ]]; then echo "Software package test failed." && exit 1;\
          else echo "Software package test success.";fi
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Download artifacts_export
        uses: actions/download-artifact@v3
        with:
          name: artifacts_export
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
